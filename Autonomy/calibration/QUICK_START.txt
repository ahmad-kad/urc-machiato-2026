╔════════════════════════════════════════════════════════════════╗
║                                                                ║
║   🎯 QUICK START: Webcam Calibration & ArUco Distance Detection║
║                                                                ║
║   URC 2026 Autonomy Team                                       ║
║                                                                ║
╚════════════════════════════════════════════════════════════════╝

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🚀 FASTEST WAY TO GET STARTED (2 minutes)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Test ArUco detection with demo calibration (no setup needed)
cd Autonomy/calibration/aruco_tags/
python aruco_validator.py --test-mode 5 --no-display

✅ Works immediately - no calibration required!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📊 FULL WORKFLOW (15 minutes)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

STEP 1: Calibrate Your Webcam
────────────────────────────────

cd Autonomy/calibration/camera/

# Quick 30-second calibration (requires printed ChArUco board)
python quick_calibration.py --duration 30 --output my_camera.json

# Or use demo calibration (already exists)
# Skip calibration for testing - demo_calibration.json is ready!

STEP 2: Test with Real Calibration
────────────────────────────────────

cd Autonomy/calibration/aruco_tags/

# Run detection with your calibrated camera
python aruco_validator.py \
  --calibration ../camera/my_camera.json \
  --tag-size 10.0

# Hold printed ArUco tags in front of webcam
# Press 'q' to quit

STEP 3: Check Results
──────────────────────

Shows in real-time:
  ✓ ID: Tag identifier
  ✓ Distance: Measured in centimeters
  ✓ FPS: Processing speed
  ✓ Status: Detection confidence (green/yellow/red)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📁 FILES YOU NEED
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

CALIBRATION:
  📄 Autonomy/calibration/camera/quick_calibration.py
  📄 Autonomy/calibration/camera/demo_calibration.json (ready to use!)

DETECTION:
  📄 Autonomy/calibration/aruco_tags/aruco_validator.py
  📄 Autonomy/calibration/aruco_tags/test_aruco_detection.py

DOCUMENTATION:
  📖 Autonomy/calibration/COMPLETE_WORKFLOW.md (detailed guide)
  📖 Autonomy/calibration/aruco_tags/VALIDATION_README.md

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎮 USAGE EXAMPLES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. DEMO MODE (No calibration, instant testing)
   ────────────────────────────────────────────
   cd Autonomy/calibration/aruco_tags/
   python aruco_validator.py --test-mode 10 --no-display
   
   ✅ Best for: Quick testing, CI/CD, headless systems

2. LIVE DETECTION (Real-time with camera feed)
   ──────────────────────────────────────────────
   python aruco_validator.py \
     --calibration ../camera/demo_calibration.json \
     --tag-size 10.0
   
   ✅ Best for: Visual testing, debugging

3. CALIBRATED DISTANCE MEASUREMENT
   ──────────────────────────────────
   cd Autonomy/calibration/camera/
   python quick_calibration.py --duration 30 --output cal.json
   
   cd ../aruco_tags/
   python aruco_validator.py --calibration ../camera/cal.json --tag-size 10.0
   
   ✅ Best for: Accurate distance measurements

4. STATIC IMAGE TESTING
   ──────────────────────
   cd Autonomy/calibration/aruco_tags/
   python test_aruco_detection.py --image ../path/to/image.png
   
   ✅ Best for: Testing without live camera

5. BATCH IMAGE TESTING
   ──────────────────────
   python test_aruco_detection.py --batch ./aruco_tags_png/ --save-results results.json
   
   ✅ Best for: Validation on multiple images

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔍 TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❌ "Failed to open camera"
   → Check camera is connected
   → Try different index: --camera 0 or --camera 1

❌ "No tags detected"
   → Ensure good lighting
   → Tag should be at least 1/10th of frame
   → Hold tag straight (not at angle)

❌ "Distance measurements wrong"
   → Verify --tag-size matches actual printed size
   → Use proper camera calibration (not demo)
   → Point camera directly at tag (no extreme angles)

✅ "Want accurate distances?"
   → Print ChArUco board
   → Run full calibration: python quick_calibration.py
   → Use calibrated file: --calibration my_camera.json

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📚 WHAT'S INCLUDED
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Real-time ArUco tag detection
✅ Distance calculation with calibration
✅ Visual feedback (green/yellow/red status)
✅ Performance monitoring (FPS, frame count)
✅ Multiple detection modes (live/test/batch)
✅ Raspberry Pi ready
✅ ROS2 compatible
✅ Extensive documentation

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🎓 LEARNING PATH
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Beginner:     Demo mode → Live detection → Read VALIDATION_README.md
Intermediate: Calibration → Distance testing → Custom tag sizes
Advanced:     Pi deployment → ROS2 integration → System optimization

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🚀 NEXT STEPS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Read: Autonomy/calibration/COMPLETE_WORKFLOW.md
2. Test: Try quick demo mode (see "FASTEST WAY" above)
3. Calibrate: Run quick_calibration.py with ChArUco board
4. Detect: Run aruco_validator.py with printed tags
5. Deploy: Use on Raspberry Pi for competition

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Questions? Check the detailed documentation files or run:
  python <script> --help

🎉 Ready to detect and measure ArUco tags!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
