name: Lint Python Code

on:
  pull_request:
    paths:
      - 'Autonomy/code/**/*.py'
      - '.github/workflows/lint-python.yml'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black isort flake8
      - name: Get changed Python files
        id: changed
        run: |
          files=$(git diff origin/main --name-only --diff-filter=ACM -- 'Autonomy/code/**/*.py' | tr '\n' ' ')
          echo "files=$files" >> $GITHUB_OUTPUT
          echo "üìã Changed Python files: $files"
      - name: Run black format check
        if: steps.changed.outputs.files != ''
        run: black --check ${{ steps.changed.outputs.files }} || true
      - name: Run isort import check
        if: steps.changed.outputs.files != ''
        run: isort --check-only ${{ steps.changed.outputs.files }} || true
      - name: Run flake8
        if: steps.changed.outputs.files != ''
        run: flake8 ${{ steps.changed.outputs.files }} --max-line-length=120 --extend-ignore=E203,W503 || true
      - name: Post lint results comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üìù **Python Linting Report**
              
              Checked files in \`Autonomy/code/\` using:
              - **black** - code formatting
              - **isort** - import sorting
              - **flake8** - style violations
              
              ‚ÑπÔ∏è Linting is informational and doesn't block merging.
              
              To fix issues locally:
              \`\`\`bash
              black Autonomy/code/
              isort Autonomy/code/
              \`\`\`
              
              [View full job logs](../actions/runs/${{ github.run_id }})`
            })
      - name: Log linting complete
        run: echo "‚úÖ Python linting check complete (non-blocking)"
