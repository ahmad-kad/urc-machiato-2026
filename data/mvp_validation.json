{
  "navigation": {
    "subsystem": "navigation",
    "mvp_achieved": false,
    "criteria_met": 4,
    "total_criteria": 5,
    "details": [
      {
        "criterion": "ROS 2 package structure exists",
        "met": true,
        "evidence": "Found: package.xml, setup.py",
        "required": true
      },
      {
        "criterion": "Basic waypoint navigation logic",
        "met": true,
        "evidence": "Navigation keywords found",
        "required": true
      },
      {
        "criterion": "GPS/IMU sensor integration",
        "met": true,
        "evidence": "Sensor integration code found",
        "required": true
      },
      {
        "criterion": "Basic obstacle avoidance",
        "met": true,
        "evidence": "obstacle_avoidance code found",
        "required": false
      },
      {
        "criterion": "Performance within acceptable range",
        "met": false,
        "evidence": "No performance_basic code detected",
        "required": false
      }
    ]
  },
  "slam": {
    "subsystem": "slam",
    "mvp_achieved": false,
    "criteria_met": 1,
    "total_criteria": 5,
    "details": [
      {
        "criterion": "ROS 2 package structure exists",
        "met": true,
        "evidence": "Found: package.xml, setup.py",
        "required": true
      },
      {
        "criterion": "Multi-sensor data fusion",
        "met": false,
        "evidence": "No fusion code detected",
        "required": true
      },
      {
        "criterion": "Basic pose estimation",
        "met": false,
        "evidence": "No pose code detected",
        "required": true
      },
      {
        "criterion": "Map generation capability",
        "met": false,
        "evidence": "No map_generation code detected",
        "required": false
      },
      {
        "criterion": "Loop closure detection",
        "met": false,
        "evidence": "No loop_closure code detected",
        "required": false
      }
    ]
  },
  "computer_vision": {
    "subsystem": "computer_vision",
    "mvp_achieved": false,
    "criteria_met": 2,
    "total_criteria": 5,
    "details": [
      {
        "criterion": "ROS 2 package structure exists",
        "met": true,
        "evidence": "Found: package.xml, setup.py",
        "required": true
      },
      {
        "criterion": "Camera data processing",
        "met": false,
        "evidence": "No camera code detected",
        "required": true
      },
      {
        "criterion": "ArUco marker detection",
        "met": false,
        "evidence": "No ArUco code detected",
        "required": true
      },
      {
        "criterion": "Object classification",
        "met": false,
        "evidence": "No object_detection code detected",
        "required": false
      },
      {
        "criterion": "Real-time performance",
        "met": true,
        "evidence": "real_time_perf code found",
        "required": false
      }
    ]
  },
  "autonomous_typing": {
    "subsystem": "autonomous_typing",
    "mvp_achieved": false,
    "criteria_met": 3,
    "total_criteria": 5,
    "details": [
      {
        "criterion": "ROS 2 package structure exists",
        "met": true,
        "evidence": "Found: package.xml, setup.py",
        "required": true
      },
      {
        "criterion": "Keyboard detection",
        "met": true,
        "evidence": "Keyboard detection code found",
        "required": true
      },
      {
        "criterion": "Arm control integration",
        "met": false,
        "evidence": "No arm code detected",
        "required": true
      },
      {
        "criterion": "Basic typing sequence",
        "met": true,
        "evidence": "typing_sequence code found",
        "required": false
      },
      {
        "criterion": "Error correction",
        "met": false,
        "evidence": "No error_correction code detected",
        "required": false
      }
    ]
  },
  "state_management": {
    "subsystem": "state_management",
    "mvp_achieved": false,
    "criteria_met": 2,
    "total_criteria": 5,
    "details": [
      {
        "criterion": "ROS 2 package structure exists",
        "met": true,
        "evidence": "Found: package.xml, setup.py",
        "required": true
      },
      {
        "criterion": "State machine implementation",
        "met": true,
        "evidence": "State machine code found",
        "required": true
      },
      {
        "criterion": "Mode transitions",
        "met": false,
        "evidence": "No mode handling detected",
        "required": true
      },
      {
        "criterion": "Mission coordination",
        "met": false,
        "evidence": "No mission_coordination code detected",
        "required": false
      },
      {
        "criterion": "Health monitoring",
        "met": false,
        "evidence": "No health_monitoring code detected",
        "required": false
      }
    ]
  },
  "led_status": {
    "subsystem": "led_status",
    "mvp_achieved": false,
    "criteria_met": 3,
    "total_criteria": 5,
    "details": [
      {
        "criterion": "ROS 2 package structure exists",
        "met": true,
        "evidence": "Found: package.xml, setup.py",
        "required": true
      },
      {
        "criterion": "LED control interface",
        "met": true,
        "evidence": "LED control code found",
        "required": true
      },
      {
        "criterion": "Status signaling logic",
        "met": true,
        "evidence": "Status logic code found",
        "required": true
      },
      {
        "criterion": "Hardware integration",
        "met": false,
        "evidence": "No hardware_integration code detected",
        "required": false
      },
      {
        "criterion": "Error indication",
        "met": false,
        "evidence": "No error_indication code detected",
        "required": false
      }
    ]
  }
}